[{"C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\app.js":"1","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\Alert.js":"2","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\background-title\\Background-title.js":"3","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\login-bar\\LoginBar.js":"4","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\login-redirect\\Login.js":"5","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\opportunities\\OpportunitiesCard.js":"6","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\opportunities\\OpportunitiesDetailCard.js":"7","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\opportunities\\OpportunitiesEmpty.js":"8","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\opportunities\\OpportunitiesList.js":"9","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\opportunities\\OpportunitiesLoadingCard.js":"10","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\page-footer\\Page-footer.js":"11","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\page-header\\Page-header.js":"12","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\Pagination.js":"13","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\resumes-list\\ResumesList.js":"14","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\video-recorder-block\\Video-recorder-block.js":"15","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\index.js":"16","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\pages\\candidate-detail.js":"17","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\pages\\candidate-signup.js":"18","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\pages\\login.js":"19","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\pages\\opportunitie-details.js":"20","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\pages\\opportunities.js":"21","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\pages\\page-not-found.js":"22","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\pages\\video-recorder.js":"23","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\pages\\video-resume.js":"24","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\routes.js":"25","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\services\\api.js":"26","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\services\\auth.js":"27","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\services\\methods.js":"28"},{"size":302,"mtime":1607350599890,"results":"29","hashOfConfig":"30"},{"size":372,"mtime":1606997374490,"results":"31","hashOfConfig":"30"},{"size":726,"mtime":1607347061141,"results":"32","hashOfConfig":"30"},{"size":1358,"mtime":1607349355175,"results":"33","hashOfConfig":"30"},{"size":242,"mtime":1606256238689,"results":"34","hashOfConfig":"30"},{"size":2458,"mtime":1607347061145,"results":"35","hashOfConfig":"30"},{"size":1951,"mtime":1606931879587,"results":"36","hashOfConfig":"30"},{"size":419,"mtime":1606933505147,"results":"37","hashOfConfig":"30"},{"size":1279,"mtime":1607087898923,"results":"38","hashOfConfig":"30"},{"size":306,"mtime":1607347061144,"results":"39","hashOfConfig":"30"},{"size":988,"mtime":1606423444274,"results":"40","hashOfConfig":"30"},{"size":3574,"mtime":1606482884210,"results":"41","hashOfConfig":"30"},{"size":472,"mtime":1606838613095,"results":"42","hashOfConfig":"30"},{"size":4852,"mtime":1606921279980,"results":"43","hashOfConfig":"30"},{"size":10788,"mtime":1607101510565,"results":"44","hashOfConfig":"30"},{"size":817,"mtime":1607350615981,"results":"45","hashOfConfig":"30"},{"size":14119,"mtime":1607348111435,"results":"46","hashOfConfig":"30"},{"size":11532,"mtime":1606919339981,"results":"47","hashOfConfig":"30"},{"size":3352,"mtime":1607348408040,"results":"48","hashOfConfig":"30"},{"size":4637,"mtime":1607347756093,"results":"49","hashOfConfig":"30"},{"size":3150,"mtime":1607347600145,"results":"50","hashOfConfig":"30"},{"size":1143,"mtime":1607347575090,"results":"51","hashOfConfig":"30"},{"size":1818,"mtime":1607348147901,"results":"52","hashOfConfig":"30"},{"size":5875,"mtime":1607347359035,"results":"53","hashOfConfig":"30"},{"size":2044,"mtime":1607348539454,"results":"54","hashOfConfig":"30"},{"size":767,"mtime":1606769423453,"results":"55","hashOfConfig":"30"},{"size":1302,"mtime":1606921800351,"results":"56","hashOfConfig":"30"},{"size":3505,"mtime":1607347304481,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15qp9jk",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\app.js",[],"C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\Alert.js",[],"C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\background-title\\Background-title.js",[],"C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\login-bar\\LoginBar.js",[],"C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\login-redirect\\Login.js",[],"C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\opportunities\\OpportunitiesCard.js",[],"C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\opportunities\\OpportunitiesDetailCard.js",[],"C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\opportunities\\OpportunitiesEmpty.js",[],"C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\opportunities\\OpportunitiesList.js",[],"C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\opportunities\\OpportunitiesLoadingCard.js",[],"C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\page-footer\\Page-footer.js",[],"C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\page-header\\Page-header.js",[],"C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\Pagination.js",[],"C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\resumes-list\\ResumesList.js",["123","124"],"import React, { useState, useEffect } from 'react';\r\n\r\n//CSS\r\nimport './styles/resumes-list.css'\r\n\r\n//Alert\r\n\r\nimport { useAlert } from 'react-alert'\r\n\r\n//Icons\r\nimport { FaDownload, FaTrash } from \"react-icons/fa\";\r\nimport { getResumes, deleteResume, downloadResume, sendResume } from '../../services/methods';\r\n\r\nexport default function ResumesList() {\r\n    const [resumes, setResumes] = useState({});\r\n    const [localResume, setLocalResume] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function setResumesAPI() {\r\n            const resumeList = await getResumes();\r\n            setResumes(resumeList);\r\n        }\r\n\r\n        setResumesAPI()\r\n    })\r\n    \r\n    const alert = useAlert();\r\n\r\n\tconst showError = (message) => {\r\n        alert.show(message, {type: 'error'})\r\n    }\r\n\r\n    const showSuccess = (message) => {\r\n        alert.show(message, {type: 'success'})\r\n    }\r\n    \r\n    function deleteResumeAPI(hashId) {\r\n        if (resumes.length > 1) {\r\n            (deleteResume(hashId))\r\n            showSuccess('Currículo apagado')\r\n        }\r\n        \r\n        else {\r\n            showError('Deve haver pelo menos um currículo salvo');\r\n        }\r\n    }\r\n\r\n    const checkFileType = (fileType) => {\r\n        const acceptedTypes = [\r\n            //Checar tipos de arquivo aceitos\r\n            {name:'application/msword', type:' .doc'},\r\n            {name:'application/vnd.openxmlformats-officedocument.wordprocessingml.document', type:' .docx'},\r\n            {name:'application/pdf', type:' .pdf'}\r\n        ]\r\n        \r\n        const isValid = acceptedTypes.find(type => type.name == fileType);\r\n\r\n        if(isValid !== undefined) {\r\n            return true;\r\n        }\r\n\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function handleResume(e) {\r\n        //Valida o tipo do arquivo\r\n        const file = e.target.files[0];\r\n        const isFormat = checkFileType(file.type);\r\n        \r\n        if(isFormat) {\r\n            //Enviar para o backend\r\n            document.querySelector('div.input-flex.input-block').classList.remove('input-error');           \r\n            document.querySelector('div.input-flex.input-block label span').classList.remove('text-error');\r\n            //document.querySelector('div.file-details').classList.remove('display-none')\r\n            setLocalResume(file);\r\n            sendResume(file)\r\n            showSuccess('Currículo salvo')\r\n        }\r\n        \r\n        else {\r\n            //Erro no arquivo\r\n            document.querySelector('div.input-flex.input-block').classList.add('input-error');\r\n            document.querySelector('div.input-flex.input-block label span').classList.add('text-error');\r\n            //document.querySelector('div.file-details').classList.add('display-none')   \r\n        }\r\n\r\n    }\r\n\r\n    const downloadLocalResume = () => {\r\n        let a = document.createElement('a')\r\n        a.style = 'display:none';\r\n        a.download = localResume.name;\r\n        const resumeURL = window.URL.createObjectURL(localResume);\r\n        a.href = resumeURL;\r\n        a.click()\r\n    }\r\n\r\n    return (\r\n        <div id='resumes'>\r\n            <div className=\"input-flex input-block\">\r\n                <label \r\n                    htmlFor='resume'\r\n                    className=''>\r\n                        <strong>Envie seu currículo</strong>\r\n                        <span>\r\n                            Formatos .doc, .docx ou .pdf\r\n                        </span>\r\n                    \r\n                </label>\r\n\r\n                <input \r\n                    id=\"resume\"\r\n                    type='file'\r\n                    className='display-none'\r\n                    onChange={handleResume}/>\r\n            </div>\r\n\r\n            {Object.keys(resumes).map((key) => {\r\n                    return (\r\n                        <div key={resumes.key} className=\"file-list\">\r\n                            <FaTrash \r\n                                color={'red'} \r\n                                onClick={() => {\r\n                                    deleteResumeAPI(resumes[key].hashId)}}/>\r\n\r\n                            <FaDownload \r\n                                color={'blue'} \r\n                                onClick={() => downloadResume(resumes[key].hashId, resumes[key].nomeArquivo)}/>\r\n\r\n                            <p>{resumes[key].nomeArquivo}</p>\r\n                        </div>\r\n                    )\r\n            })}\r\n            \r\n            {/* {localResume !== '' ? \r\n                (<div id='local-resumes'className=\"file-list\">\r\n                    <FaTrash color={'red'} onClick={() => {setLocalResume('')}}/>\r\n                    <FaDownload color={'blue'} onClick={downloadLocalResume}/>\r\n                    <p>{localResume.name}</p>\r\n                </div>) :\r\n\r\n                (<p></p>)\r\n            } */}\r\n\r\n        </div>\r\n    )\r\n}","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\components\\video-recorder-block\\Video-recorder-block.js",["125","126","127","128","129","130","131"],"import React, { useEffect, useState } from 'react';\r\n\r\n//Router\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\n//Icons\r\nimport { FaDownload, FaStop, FaRecordVinyl, FaShare} from 'react-icons/fa';\r\n\r\n//Methods\r\nimport {sendVideoResume} from '../../services/methods'\r\n\r\n//Alert\r\nimport { useAlert } from 'react-alert';\r\n\r\nfunction VideoRecorderBlock(props) {\r\n    useEffect(() => { setRecord()}, [])\r\n\r\n    //Params\r\n    const params = useParams();\r\n        \r\n    //States\r\n    const [isCameraAllowed, setIsCameraAllowed] = useState(false);\r\n    const [returnTo, setreturnTo] = useState(props.returnTo);\r\n    \r\n    const alert = useAlert();\r\n\r\n    function showSuccess(m) {\r\n        alert.show(m, {type: 'success'})\r\n    }\r\n\r\n    function showErrorMessage(m) {\r\n        alert.show(m, {type: 'error'})\r\n    }\r\n\r\n    //History\r\n    const history = useHistory();\r\n\r\n    let cron;\r\n    let tempo = props.time; //Tempo limite de gravação\r\n    let chunks = [];\r\n    let videoBlobURL = '';\r\n    let streamVar;\r\n    let mediaRecorder;\r\n    let fileRecorded;\r\n    \r\n  \r\n    function setRecord() {\r\n        'use strict';\r\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {//Checa disponibilidade\r\n        // Access the web cam\r\n            navigator.mediaDevices.getUserMedia({audio: true, video: {facingMode: 'user'}}).then(function(stream) {\r\n                let video = document.querySelector('video.videoStream');\r\n                video.id = 'videoN1';\r\n                video.srcObject = stream;\r\n                streamVar = stream; //Exporta o valor 'stream'\r\n                video.muted = true;\r\n                video.setAttribute('controls','false');\r\n                video.setAttribute('playsinline', true);\r\n                video.setAttribute('controls', false);\r\n                video.onloadedmetadata = function() {\r\n                    video.play();\r\n                    triggerItens();\r\n                };\r\n                setIsCameraAllowed(true);\r\n                //Destination after record video\r\n                props.returnTo === '' && setreturnTo('params.id')\r\n            })\r\n\r\n            .catch(function(error) {\r\n            console.log('Não foi possível acesso a câmera. Erro: ' + error.name + ': ' + error.message);\r\n            });\r\n        }\r\n    };\r\n    \r\n    function triggerItens () {\r\n        mediaRecorder = new MediaRecorder(\r\n            streamVar, \r\n            {audioBitsPerSecond : 16000, \r\n            videoBitsPerSecond : 500000, \r\n            mimeType : 'video/webm'}\r\n        );\r\n\r\n        let record = document.querySelector('#buttonRecord');\r\n        let stop = document.querySelector('#buttonStop');\r\n        let download = document.querySelector('#buttonDownload');\r\n        let send = document.querySelector(\"#buttonSend\")\r\n\r\n        record.href = '#videoN1';\r\n        stop.href = '#videoN1';\r\n        download.href = '#videoN1';\r\n        \r\n        //Start record\r\n        record.onclick = function() {\r\n            chunks = [];\r\n            \r\n            showButtons(['#buttonStop']);\r\n            hideButtons(['#buttonRecord', '#buttonDownload', '#buttonSend']);\r\n            hidevideoRecorded();\r\n\r\n            startT();                \r\n            \r\n            navigator.mediaDevices.getUserMedia({audio: true, video: {facingMode: 'user'}})\r\n            .then(function() {\r\n                chunks = [];\r\n\r\n                mediaRecorder.start();\r\n                \r\n                mediaRecorder.ondataavailable = function(eventoData) {\r\n                    if(eventoData.data.size > 0) {\r\n                        chunks.push(eventoData.data);\r\n                    }     \r\n                }\r\n            })\r\n        }\r\n                \r\n        //Stop record        \r\n        stop.onclick = function() {\r\n            mediaRecorder.stop();\r\n            hideButtons(['#buttonStop'])\r\n            showButtons(['#buttonRecord', '#buttonDownload', '#buttonSend'])\r\n        }\r\n        \r\n        mediaRecorder.onstop = function(e) {\r\n            fileRecorded = chunks[0]\r\n            document.querySelector('input#mimeType').value = mediaRecorder.mimeType;\r\n            const blob = new Blob(chunks, { 'type' : 'octet-stream' }); //mediaRecorder.mimeType });\r\n            //chunks = [];\r\n            videoBlobURL = window.URL.createObjectURL(blob);\r\n            stopT();\r\n            \r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(blob); \r\n            reader.onloadend = function() {\r\n                var base64data = reader.result; \r\n                document.querySelector('input#base64String').value = base64data;\r\n            }\r\n            \r\n            //Download record\r\n            download.onclick = () => {\r\n                downloadOnClick(videoBlobURL);\r\n            }\r\n            \r\n            //Send Record\r\n            send.onclick = () => {\r\n                sendOnClick(fileRecorded);\r\n            }\r\n\r\n            showVideoRecorded(videoBlobURL);\r\n        }\r\n    };\r\n\r\n    const stopStreaming = () => {\r\n        const videoElement = document.querySelector('video.videoStream');\r\n        const stream = videoElement.srcObject;\r\n        const tracks = stream.getTracks();\r\n        \r\n        tracks.forEach(function(track) {\r\n            track.stop();\r\n            track.enabled = false;\r\n        });\r\n        videoElement.srcObject = null;\r\n\r\n    }\r\n\r\n    const downloadOnClick = (url) => {\r\n        let a = document.createElement('a');\r\n        document.body.appendChild(a);\r\n        a.style = 'display:none';\r\n        a.href = url;\r\n        a.download = 'videocurriculo.webm';\r\n        a.click();\r\n    }\r\n    \r\n    const sendOnClick = async (file) => {\r\n        if (params.id === 'video-curriculo') {\r\n            const response = await sendVideoResume(file);\r\n            if(response.status == 'error'){\r\n                showErrorMessage(response.message);\r\n                return\r\n            }\r\n            showSuccess('Vídeo currículo enviado com sucesso!');\r\n            stopStreaming()\r\n            history.push(returnTo)\r\n        }\r\n\r\n        else {\r\n             \r\n            showSuccess('Vídeo currículo enviado com sucesso!');\r\n            stopStreaming()\r\n            //history.push(`/oportunidades/${params.id}`)\r\n        }\r\n\r\n        //let video = document.querySelector('video.videoStream');\r\n        //stopStreaming(video)\r\n        \r\n    }\r\n    \r\n    function startT(){\r\n        //Update the count down every 1 second\r\n        cron = setInterval(() => {timer();}, 1000);\r\n    }\r\n\r\n    function stopT(){\r\n        clearInterval(cron);\r\n        document.querySelector('p.timer').innerText = '';\r\n    }\r\n\r\n    function timer(){\r\n        // Time calculations for hours, minutes and seconds\r\n        tempo--;\r\n        //var hours = Math.floor(tempo / (1000 * 60 * 60));\r\n        var minutes = Math.floor((tempo % (1000 * 60 * 60))/60);\r\n        var seconds = Math.floor((tempo % (1000 * 60 * 60)) % 60);\r\n            \r\n        //var h = h < 10 ? '0' + hours + ':' :  hours + ':';\r\n        var min = minutes < 10 ? '0' + minutes + ':' :  minutes + ':';\r\n        var sec = seconds < 10 ? '0' + seconds :  seconds;    \r\n\r\n        document.querySelector('p.timer').innerText = min + sec//h + min + sec;\r\n\r\n        // If the count down is over, write some text \r\n        if (tempo <= 0) {\r\n            clearInterval(cron);\r\n            document.querySelector('#buttonStop').click();\r\n        }\r\n    }\r\n\r\n    //Mostrar e ocultar botões\r\n    const showButtons = (ids) => {\r\n        ids.map(id => {\r\n            ids == '' ? console.log('Argumento necessário') :\r\n            document.querySelector(id).classList.remove('displayNone');\r\n        })\r\n    }\r\n\r\n    const hideButtons = (ids) => {\r\n        ids.map(id => {\r\n            ids == '' ? console.log('Argumento necessário') :\r\n            document.querySelector(id).classList.add('displayNone');\r\n        })\r\n    }\r\n\r\n    const showVideoRecorded = (media) => {\r\n        document.querySelector('video.videoStream').classList.add('displayNone');\r\n        let video = document.querySelector('#video-recorded');\r\n        video.classList.remove('displayNone');\r\n        video.src = media;\r\n    }\r\n\r\n    const hidevideoRecorded = () => {\r\n        document.querySelector('video.videoStream').classList.remove('displayNone');\r\n        document.querySelector('#video-recorded').classList.add('displayNone');\r\n    }   \r\n\r\n    return (\r\n        <div id=\"recorder-block\">\r\n            {\r\n                !isCameraAllowed && \r\n                 //Sem acesso à câmera\r\n                <div id='no-opportunities'>\r\n                    <p className=\"no-opportunities\">Sem acesso à câmera...</p>\r\n                </div>\r\n            }\r\n\r\n            <video className='videoStream' autoPlay muted></video>\r\n            <video id=\"video-recorded\" muted=\"false\" className='displayNone' controls=\"true\"></video>\r\n            \r\n            <div id=\"timerContainer\" className=\"displayFlex\">\r\n                <p className=\"timer\"></p>\r\n            </div>\r\n            \r\n            {\r\n                isCameraAllowed &&\r\n                    <div> \r\n                        <div className=\"div-buttons displayFlex\">\r\n                            <button id=\"buttonRecord\" className=\"button button-secondary\">\r\n                                <FaRecordVinyl/>\r\n                                Gravar\r\n                            </button>\r\n\r\n                            <button id=\"buttonStop\" className=\"button button-secondary displayNone\">\r\n                                <FaStop/>\r\n                                Parar\r\n                            </button>\r\n\r\n                            <button id=\"buttonDownload\" className=\"button button-secondary displayNone\">\r\n                                <FaDownload/>\r\n                                Baixar\r\n                            </button>\r\n                            \r\n                            <button \r\n                                id=\"buttonSend\"\r\n                                className=\"button button-primary displayNone\"\r\n                                style={{cursor:'pointer'}}>\r\n                                <FaShare/>\r\n                                Enviar\r\n                            </button>\r\n                        </div>\r\n\r\n                        <input id=\"base64String\" className=\"input hideItens\"/>\r\n                        <input id=\"mimeType\" className=\"input hideItens\"/>\r\n\r\n                    </div>\r\n            }\r\n\r\n            <div id=\"back-button\">\r\n                    <button onClick={() => {history.push(`/oportunidades/${returnTo}`)}} className=\"button button-secondary\">\r\n                        Voltar\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoRecorderBlock;","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\index.js",[],"C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\pages\\candidate-detail.js",["132"],"import React, { useEffect, useState } from \"react\";\r\n\r\n//Router dom\r\nimport {Link, useParams, useHistory} from 'react-router-dom';\r\n\r\n//CSS\r\nimport \"../styles/candidate-detail.css\";\r\n\r\n\r\n//Components\r\nimport BackgroundTitle from \"../components/background-title/Background-title\";\r\nimport ResumesList from '../components/resumes-list/ResumesList'\r\n\r\n//API and Auth\r\nimport api from \"../services/api\";\r\nimport { getHashId,setUserName } from \"../services/auth\";\r\n\r\n//Alert\r\nimport { useAlert } from 'react-alert';\r\n\r\nfunction CandidateDetails() {\r\n    const alert = useAlert();\r\n\r\n\tconst showError = (message) => {\r\n        alert.show(message, {type: 'error'})\r\n    }\r\n\r\n    const showSuccess = (message) => {\r\n        alert.show(message, {type: 'success'})\r\n    }\r\n\r\n    const history = useHistory();\r\n    const params = useParams();\r\n\r\n    //Form data\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [linkedin, setLinkedin] = useState('');\r\n    const [cellNumber, setCellNumber] = useState('')\r\n    const [phone, setPhone] = useState('');\r\n    //const [password, setPassword] = useState('');\r\n    //const [resume, setResume] = useState('')\r\n    \r\n    useEffect(() => {\r\n        try {\r\n            const getData = async function() {\r\n                api.defaults.headers.post['Content-Type'] = 'application/json';\r\n    \r\n                await api.get(`/candidato`).then(response => {\r\n                    try {\r\n                        // api.get(`/candidato-curriculo/DOCUMENTO`).then(response => {\r\n                        //     setResume({\r\n                        //         'name' : response.data.responseData[0].nomeArquivo,\r\n                        //         'hashId': response.data.responseData[0].hashId,\r\n                        //     });\r\n                        // //document.querySelector('div.file-details').classList.remove('display-none');\r\n                        // });\r\n                    }\r\n\r\n                    catch(error) {\r\n                         showError('Erro ao buscar currículo')\r\n                     }\r\n                    \r\n                    const data = response.data.responseData;\r\n                    setName(data.nome);\r\n                    setEmail(data.email);\r\n                    setCellNumber(data.celular);\r\n                    setPhone(data.telefone);\r\n                    setLinkedin(data.linkedin)\r\n                    \r\n                })\r\n            }\r\n            getData()\r\n        }\r\n        \r\n        catch (error) {\r\n            console.log(error)\r\n        }        \r\n    }, [params.id])\r\n    \r\n    // const checkFileType = (fileType) => {\r\n    //     const acceptedTypes = [\r\n    //         //Checar tipos de arquivo aceitos\r\n    //         {name:'application/msword', type:' .doc'},\r\n    //         {name:'application/vnd.openxmlformats-officedocument.wordprocessingml.document', type:' .docx'},\r\n    //         {name:'application/pdf', type:' .pdf'}\r\n    //     ]\r\n        \r\n    //     const isValid = acceptedTypes.find(type => type.name == fileType);\r\n\r\n    //     if(isValid !== undefined) {\r\n    //         return true;\r\n    //     }\r\n\r\n    //     else {\r\n    //         return false;\r\n    //     }\r\n    // }\r\n    \r\n    // const handleResume = (e) => {\r\n    //     //Valida o tipo do arquivo\r\n    //     const fileTypeName = e.target.files[0];\r\n    //     const isFormat = checkFileType(fileTypeName.type);\r\n        \r\n    //     if(isFormat) {\r\n    //         //Enviar para o backend\r\n    //         document.querySelector('div.input-flex.input-block').classList.remove('input-error');           \r\n    //         document.querySelector('div.input-flex.input-block label span').classList.remove('text-error');\r\n    //         document.querySelector('div.file-details').classList.remove('display-none')\r\n    //         setResume(fileTypeName)          \r\n    //     }\r\n        \r\n    //     else {\r\n    //         //Erro no arquivo\r\n    //         document.querySelector('div.input-flex.input-block').classList.add('input-error');\r\n    //         document.querySelector('div.input-flex.input-block label span').classList.add('text-error');\r\n    //         document.querySelector('div.file-details').classList.add('display-none')   \r\n    //     }\r\n\r\n    //     sendResume(e);\r\n    // }\r\n\r\n    // const sendResume = (e) => {\r\n    //     const selectedResume = e.target.files[0];\r\n    //     setResume(selectedResume);\r\n    // }\r\n\r\n    // const removeResume = () => {\r\n    //     setResume('');\r\n    //     document.querySelector('div.file-details').classList.add('display-none');\r\n    // }\r\n\r\n    // function downloadResume(e) {     \r\n    //     let a = document.createElement('a')\r\n    //     a.style = 'display:none';\r\n    //     a.download = resume.name;\r\n        \r\n    //     if (resume.hashId == undefined) {\r\n    //         const resumeURL = window.URL.createObjectURL(resume);\r\n    //         a.href = resumeURL;\r\n    //     }\r\n        \r\n    //     else {\r\n    //         a.href = api.get(`/candidato-curriculo/download/${resume.hashId}`);\r\n    //     }\r\n    //     a.click();\r\n    // }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n            \r\n        // if(resume === '') { //Checa se o currículo foi anexado\r\n        //     document.querySelector('div.input-flex.input-block').classList.add('input-error');\r\n        //     document.querySelector('div.input-flex.input-block label span').classList.add('text-error');\r\n        //     return;\r\n        // }\r\n\r\n        const data = {\r\n            \"celular\": cellNumber,\r\n            \"email\":email,\r\n            \"hashId\": getHashId(),\r\n            \"linkedin\": linkedin,\r\n            \"login\": email,\r\n            \"nome\": name,\r\n            \"telefone\": phone,\r\n            //\"senha\": password,\r\n        }\r\n\r\n        try {\r\n            api.defaults.headers.post['Content-Type'] = 'application/json'; //USAR FORMATO JSON\r\n            \r\n            let json = JSON.stringify(data);\r\n\r\n            await api.post('/candidato', json);\r\n\r\n            // api.defaults.headers.post['Content-Type'] = 'multipart/form-data'; //USAR FORMATO DE ARQUIVO\r\n\r\n            // const userResume = new FormData();\r\n\r\n            // userResume.append('arquivo', resume);\r\n            // userResume.append('name', resume.name);\r\n            // userResume.append('tipoCurriculo', 'DOCUMENTO');\r\n\r\n            // await api.post('candidato-curriculo', userResume);\r\n            \r\n            setUserName(data.nome)\r\n            showSuccess('Usuário alterado com sucesso');\r\n            history.push('/oportunidades');\r\n        }\r\n            \r\n        catch (error) {\r\n            console.log(`${error.message}`);\r\n            showError(\"Erro ao editar usuário. Tente novamente!\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id='page-candidate-details' className=\"page-position\">\r\n            <BackgroundTitle  \r\n                title={`Meus dados`}\r\n                description={'Confira seus dados cadastrados'}/>\r\n\r\n            <main className='display-flex'>                    \r\n                <form className=\"create-candidate\" onSubmit={handleSubmit}>\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor=\"name\">\r\n                            Nome</label>\r\n                        <input \r\n                            id=\"name\" \r\n                            value={name}\r\n                            type=\"text\"\r\n                            maxLength=\"50\"\r\n                            onChange={event => {setName(event.target.value)}}\r\n                            required/>\r\n                    </div>\r\n\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor=\"email\">\r\n                            E-mail\r\n                            <span>\r\n                                O seu e-mail não pode ser alterado\r\n                            </span>\r\n                        </label>\r\n                        <input \r\n                            type=\"email\" \r\n                            id=\"email\"\r\n                            maxLength=\"40\"\r\n                            onChange={event => {setEmail(event.target.value)}}\r\n                            value={email}\r\n                            disabled/>\r\n                    </div>\r\n\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor=\"linkedin\">\r\n                            Linkedin \r\n                            <span>\r\n                                Informe a url para seu perfil\r\n                            </span>                            \r\n                        </label>\r\n                            \r\n                        <input \r\n                            id='linkedin'\r\n                            type='text'\r\n                            maxLength=\"100\"\r\n                            onChange={event => {setLinkedin(event.target.value)}}\r\n                            value={linkedin}\r\n                            required/>\r\n                    </div> \r\n\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor=\"phone-number\">\r\n                            Celular\r\n                            <span>\r\n                                Formato: 11 dígitos com DDD (21999999999)\r\n                            </span>\r\n                         </label>\r\n\r\n                        <input \r\n                            id=\"phone-number\" \r\n                            value={cellNumber}\r\n                            type=\"text\"\r\n                            pattern = \"[0-9]+\"\r\n                            maxLength=\"11\"\r\n                            minLength=\"11\"\r\n                            title=\"Somente números\"\r\n                            onChange={event => {setCellNumber(event.target.value)}}\r\n                            required/>\r\n                    </div>\r\n\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor=\"phone\">\r\n                            Telefone\r\n                            <span>\r\n                                Formato: 10 dígitos com DDD (2133333333)\r\n                            </span>                            \r\n                        </label>\r\n                            \r\n                        <input \r\n                            id=\"phone\" \r\n                            value={phone}\r\n                            type=\"text\"\r\n                            pattern = \"[0-9]+\"\r\n                            maxLength=\"10\"\r\n                            minLength=\"10\"\r\n                            title=\"Somente números\"\r\n                            onChange={event => {setPhone(event.target.value)}}\r\n                            required/>\r\n                    </div>\r\n\r\n                    {/* <div className=\"input-block\">\r\n                        <label htmlFor=\"password\">Senha\r\n                            <span>\r\n                                Informe uma senha para acesso ao sistema\r\n                            </span>\r\n                        </label>\r\n                            \r\n                        <input \r\n                            id=\"password\" \r\n                            value={password}\r\n                            maxLength=\"10\"\r\n                            type=\"password\"\r\n                            onChange={event => {setPassword(event.target.value)}}\r\n                            required/>\r\n                    </div> */}\r\n\r\n                    <div className=\"input-block\">\r\n                        <label \r\n                            htmlFor='change-password'\r\n                            style={{cursor:'pointer'}}>\r\n                                Redefinir senha\r\n                                <span>\r\n                                    Você receberá um e-mail parar alterar a senha de acesso\r\n                                </span>\r\n                            \r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"input-block\">\r\n                        <label \r\n                            htmlFor='send-video'\r\n                            style={{cursor:'pointer'}}\r\n                            onClick={() => history.push('/video-curriculo')}>\r\n                                Vídeo Currículo\r\n                                <span>\r\n                                    Grave seu vídeo currículo e aumente suas chances\r\n                                </span>\r\n                            \r\n                        </label>\r\n                    </div>\r\n\r\n                    {/* <div className=\"input-flex input-block\">\r\n                        <label \r\n                            htmlFor='resume'\r\n                            className=''>\r\n                                <strong>Envie seu currículo</strong>\r\n                                <span>\r\n                                    Formatos .doc, .docx ou .pdf\r\n                                </span>\r\n                            \r\n                        </label>\r\n\r\n                        <input \r\n                            id=\"resume\"\r\n                            type='file'\r\n                            className='display-none'\r\n                            onChange={handleResume}/>\r\n                    </div> */}\r\n\r\n                    <ResumesList/>\r\n\r\n                    {/* <div className=\"file-details \">\r\n                        <FaTrash color={'red'} onClick={removeResume}/>\r\n                        <FaDownload color={'blue'} onClick={downloadResume}/>\r\n                        <p>{resume.name}</p>\r\n                    </div>  */}\r\n\r\n\r\n                    <div class='display-flex button-send'>\r\n                        <Link to=\"/\" className=\"button button-secondary\">\r\n                            Ver oportunidades\r\n                        </Link>\r\n\r\n                        <button type=\"submit\" className=\"button button-primary send-form\">\r\n                            Enviar\r\n                        </button>\r\n                    </div>\r\n\r\n                </form>\r\n            </main>\r\n        </div>\r\n        )\r\n    }\r\n\r\nexport default CandidateDetails;\r\n","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\pages\\candidate-signup.js",["133"],"import React, { useState } from \"react\";\r\n\r\n//Router dom\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\n//CSS\r\nimport \"../styles/candidate-detail.css\";\r\n\r\n//Icons\r\nimport { FaDownload, FaTrash } from \"react-icons/fa\";\r\n\r\n//Components\r\nimport BackgroundTitle from \"../components/background-title/Background-title\";\r\n\r\n//API and Auth\r\nimport api from \"../services/api\";\r\nimport { getHashId, isAuthenticated, firstLogin, logout } from \"../services/auth\";\r\n\r\n//Alert\r\nimport { useAlert } from 'react-alert';\r\n\r\nexport default function CandidateSignUp() {\r\n    const alert = useAlert();\r\n    \r\n    const showError = (message) => {\r\n        alert.show(message, {type: 'error'})\r\n    }\r\n\r\n    const showSuccess = (message) => {\r\n        alert.show(message, {type: 'success'})\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    isAuthenticated() && history.push(`/candidato/${getHashId()}`);\r\n\r\n    //Form data\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [linkedin, setLinkedin] = useState('');\r\n    const [cellNumber, setCellNumber] = useState('')\r\n    const [phone, setPhone] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [resume, setResume] = useState('');\r\n     \r\n    const checkFileType = (fileType) => {\r\n        const acceptedTypes = [\r\n            //Checar tipos de arquivo aceitos\r\n            {name:'application/msword', type:' .doc'},\r\n            {name:'application/vnd.openxmlformats-officedocument.wordprocessingml.document', type:' .docx'},\r\n            {name:'application/pdf', type:' .pdf'}\r\n        ]\r\n        \r\n        const isValid = acceptedTypes.find(type => type.name == fileType);\r\n\r\n        if(isValid !== undefined) {\r\n            return true;\r\n        }\r\n\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleResume = (e) => {\r\n        //Valida o tipo do arquivo\r\n        const fileTypeName = e.target.files[0];\r\n        const isFormat = checkFileType(fileTypeName.type);\r\n        \r\n        if(isFormat) {\r\n            //Enviar para o backend\r\n            document.querySelector('div.input-flex.input-block').classList.remove('input-error');           \r\n            document.querySelector('div.input-flex.input-block label span').classList.remove('text-error');\r\n            document.querySelector('div.file-details').classList.remove('display-none')\r\n            setResume(fileTypeName)          \r\n        }\r\n        \r\n        else {\r\n            //Erro no arquivo\r\n            document.querySelector('div.input-flex.input-block').classList.add('input-error');\r\n            document.querySelector('div.input-flex.input-block label span').classList.add('text-error');\r\n            document.querySelector('div.file-details').classList.add('display-none')   \r\n        }\r\n\r\n        sendResume(e);\r\n    }\r\n\r\n    const sendResume = (e) => {\r\n        const selectedResume = e.target.files[0];\r\n        setResume(selectedResume);\r\n    }\r\n\r\n    const removeResume = () => {\r\n        setResume('');\r\n        document.querySelector('div.file-details').classList.add('display-none');\r\n    }\r\n\r\n    const downloadResume = (e) => {\r\n        const resumeFile = window.URL.createObjectURL(resume);\r\n        let a = document.createElement('a')\r\n        a.style = 'display:none';\r\n        a.href = resumeFile;\r\n        a.download = resume.name;\r\n        a.click();\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n            \r\n        if(resume === '') { //Checa se o currículo foi anexado\r\n            document.querySelector('div.input-flex.input-block').classList.add('input-error');\r\n            document.querySelector('div.input-flex.input-block label span').classList.add('text-error');\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            \"email\":email,\r\n            \"celular\": cellNumber,\r\n            \"linkedin\": linkedin,\r\n            \"telefone\": phone,\r\n            \"senha\": password,\r\n            \"login\": email,\r\n            \"nome\": name\r\n        }\r\n\r\n        try {\r\n            api.defaults.headers.post['Content-Type'] = 'application/json'; //USAR FORMATO JSON\r\n\r\n            let json = JSON.stringify(data);\r\n\r\n            await api.post('/inscricao', json);\r\n            \r\n            let userData = { \r\n                login: data.login, \r\n                password: data.senha\r\n            }\r\n            \r\n            let jsonData = JSON.stringify(userData);\r\n            \r\n\t\t\tawait api.post(\"/api/service/login\", jsonData).then((response) => {\r\n                const string = response.data.split(\" \");\r\n\t\t\t\tconst token = string[1]; //Get token\r\n                firstLogin(token); //Store token\r\n            });\r\n\r\n            api.defaults.headers.post['Content-Type'] = 'multipart/form-data'; //USAR FORMATO DE ARQUIVO\r\n\r\n            const userResume = new FormData();\r\n\r\n            userResume.append('arquivo', resume);\r\n            userResume.append('name', resume.name);\r\n            userResume.append('tipoCurriculo', 'DOCUMENTO');\r\n\r\n            await api.post('candidato-curriculo', userResume);\r\n            \r\n            await logout();\r\n            showSuccess('Usuário criado com sucesso!');\r\n            history.push('/login');\r\n        }\r\n            \r\n        catch (error) {\r\n            showError(\"Erro ao criar usuário. Tente novamente!\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id='page-candidate-details' className=\"page-position\">\r\n            <BackgroundTitle  \r\n                title={'Novo candidato'}\r\n                description={'Cadastre-se para concorrer!'}/>\r\n\r\n            <main className='display-flex'>                    \r\n                <form className=\"create-candidate\" onSubmit={handleSubmit}>\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor=\"name\">\r\n                            Nome</label>\r\n                        <input \r\n                            id=\"name\" \r\n                            value={name}\r\n                            type=\"text\"\r\n                            maxLength=\"50\"\r\n                            onChange={event => {setName(event.target.value)}}\r\n                            required/>\r\n                    </div>\r\n\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor=\"email\">\r\n                            E-mail\r\n                            <span>\r\n                                Seu email será usado como login de acesso\r\n                            </span>\r\n                        </label>\r\n                        <input \r\n                            type=\"email\" \r\n                            id=\"email\"\r\n                            maxLength=\"40\"\r\n                            onChange={event => {setEmail(event.target.value)}}\r\n                            value={email}\r\n                            required/>\r\n                    </div>\r\n\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor=\"linkedin\">\r\n                            Linkedin \r\n                            <span>\r\n                                Informe a url para seu perfil\r\n                            </span>                            \r\n                        </label>\r\n                            \r\n                        <input \r\n                            id='linkedin'\r\n                            type='text'\r\n                            maxLength=\"100\"\r\n                            onChange={event => {setLinkedin(event.target.value)}}\r\n                            value={linkedin}\r\n                            required/>\r\n                    </div> \r\n\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor=\"phone-number\">\r\n                            Celular\r\n                            <span>\r\n                                Formato: 11 dígitos com DDD (21999999999)\r\n                            </span>\r\n                         </label>\r\n\r\n                        <input \r\n                            id=\"phone-number\" \r\n                            value={cellNumber}\r\n                            type=\"text\"\r\n                            pattern = \"[0-9]+\"\r\n                            maxLength=\"11\"\r\n                            minLength=\"11\"\r\n                            title=\"Somente números\"\r\n                            onChange={event => {setCellNumber(event.target.value)}}\r\n                            required/>\r\n                    </div>\r\n\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor=\"phone\">\r\n                            Telefone\r\n                            <span>\r\n                                Formato: 10 dígitos com DDD (2133333333)\r\n                            </span>                            \r\n                        </label>\r\n                            \r\n                        <input \r\n                            id=\"phone\" \r\n                            value={phone}\r\n                            type=\"text\"\r\n                            pattern = \"[0-9]+\"\r\n                            maxLength=\"10\"\r\n                            minLength=\"10\"\r\n                            title=\"Somente números\"\r\n                            onChange={event => {setPhone(event.target.value)}}\r\n                            required/>\r\n                    </div>\r\n\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor=\"password\">Senha\r\n                            <span>\r\n                                Informe uma senha para acesso ao sistema\r\n                            </span>\r\n                        </label>\r\n                            \r\n                        <input \r\n                            id=\"password\" \r\n                            value={password}\r\n                            maxLength=\"10\"\r\n                            type=\"password\"\r\n                            onChange={event => {setPassword(event.target.value)}}\r\n                            required/>\r\n                    </div>\r\n\r\n                    <div className=\"input-flex input-block\">\r\n                        <label \r\n                            htmlFor='resume'\r\n                            className=''>\r\n                                <strong>Envie seu currículo</strong>\r\n                                <span>\r\n                                    Formatos .doc, .docx ou .pdf\r\n                                </span>\r\n                            \r\n                        </label>\r\n\r\n                        <input \r\n                            id=\"resume\"\r\n                            type='file'\r\n                            className='display-none'\r\n                            onChange={handleResume}/>\r\n                    </div>\r\n\r\n                    <div className=\"file-details display-none\">\r\n                        <FaTrash color={'red'} onClick={removeResume}/>\r\n                        <FaDownload color={'blue'} onClick={downloadResume}/>\r\n                        <p>{resume.name}</p>\r\n                    </div>\r\n\r\n\r\n                    <div class='display-flex button-send'>\r\n                        <Link to=\"/\" className=\"button button-secondary\">\r\n                            Ver oportunidades\r\n                        </Link>\r\n\r\n                        <button type=\"submit\" className=\"button button-primary send-form\">\r\n                            Enviar\r\n                        </button>\r\n                    </div>\r\n\r\n                </form>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\pages\\login.js",["134","135"],"import React, { useState, useContext } from \"react\";\r\n\r\n//Router\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//Auth\r\nimport { login, isAuthenticated } from \"../services/auth\";\r\n\r\n//Components\r\nimport BackgroundTitle from \"../components/background-title/Background-title\";\r\nimport api from \"../services/api\";\r\n\r\n//CSS\r\nimport \"../styles/login.css\";\r\n\r\n//Alert\r\nimport { useAlert } from 'react-alert';\r\n\r\nfunction initialState() {\r\n\treturn { user: \"\", password: \"\" };\r\n}\r\n\r\nconst Login = () => {\r\n\tconst alert = useAlert();\r\n\r\n\tconst showError = (message) => {\r\n        alert.show(message, {type: 'error'})\r\n    }\r\n\r\n\tconst history = useHistory();\r\n\r\n\tisAuthenticated() && history.push(\"/oportunidades\");\r\n\r\n\t//const { state, signin } = useContext(AuthContext);\r\n\tconst [user, setUser] = useState(initialState.user);\r\n\tconst [password, setPassword] = useState(initialState.password);\r\n\t//const [display, setDisplay] = useState(\"display-none\");\r\n\r\n\tasync function onSubmit(e) {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst dataObj = {\r\n\t\t\tlogin: user,\r\n\t\t\tpassword: password,\r\n\t\t};\r\n\r\n\t\tconst data = JSON.stringify(dataObj);\r\n\r\n\t\ttry {\r\n\t\t\tapi.defaults.headers.post['Content-Type'] = 'application/json'; //USAR FORMATO JSON\r\n\r\n\t\t\t//const json = JSON.stringify(data);\r\n\r\n\t\t\tawait api.post(\"/api/service/login\", data).then((response) => {\r\n\t\t\t\tconst string = response.data.split(\" \");\r\n\t\t\t\tconst token = string[1]; //Get token\r\n\t\t\t\tlogin(token); //Store token\r\n\t\t\t\thistory.push(\"/oportunidades\");\r\n\t\t\t});\r\n\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error.message)\r\n\t\t\tswitch (error.message) {\r\n\t\t\t\tcase ('Request failed with status code 403'): showError('Usuário não encontrado');\r\n\t\t\t\tdefault: showError('Erro inesperado ao realizar login')\r\n\t\t\t}\r\n\t\t\t//showError(error.message)//\"Erro ao executar login. Tente novamente.\")\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"page-login\" className=\"page-position\">\r\n\t\t\t<BackgroundTitle title=\"Login\" description=\"\" />\r\n\r\n\t\t\t<main>\r\n\t\t\t\t<form onSubmit={onSubmit}>\r\n\t\t\t\t\t<div className=\"input-block\">\r\n\t\t\t\t\t\t<label htmlFor=\"user\">\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t<span>Informe o e-mail para login</span>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid=\"user\"\r\n\t\t\t\t\t\t\tname=\"user\"\r\n\t\t\t\t\t\t\tvalue={user}\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tmaxLength=\"50\"\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tsetUser(event.target.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"input-block\">\r\n\t\t\t\t\t\t<label htmlFor=\"password\">Senha</label>\r\n\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tmaxLength=\"10\"\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tsetPassword(event.target.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* <div id=\"submit-error\" className={display}>\r\n\t\t\t\t\t\t<p className={display}>\r\n\t\t\t\t\t\t\tErro ao realizar login. Tente novamente!\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t<div id=\"options\">\r\n\t\t\t\t\t\t<Link to=\"/cadastro\">Cadastre-se</Link>\r\n\r\n\t\t\t\t\t\t<Link to=\"/\">Esqueci minha senha</Link>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"submit-button\">\r\n\t\t\t\t\t\t<Link to=\"/\" className=\"button button-secondary\">\r\n\t\t\t\t\t\t\tVer oportunidades\r\n\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tclassName=\"button button-primary\">\r\n\t\t\t\t\t\t\tAcessar\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\pages\\opportunitie-details.js",["136","137","138"],"import React, { createContext, useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\n\r\n//Components\r\nimport BackgroundTitle from \"../components/background-title/Background-title\";\r\nimport OpportunitiesDetailCard from \"../components/opportunities/OpportunitiesDetailCard\";\r\n\r\n//Methods\r\nimport {getOpportunitieDetail, createCandidature, checkIsCandidate} from '../services/methods'\r\n\r\n\r\n//Auth\r\nimport {getUserName}from '../services/auth'\r\n\r\n//CSS\r\nimport \"../styles/opportunitie-details.css\";\r\n\r\n//Icons\r\nimport { FaUpload, FaDownload, FaRecordVinyl, FaCheck } from \"react-icons/fa\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nexport const userCandidature = createContext();\r\n\r\n\r\nfunction OpportunitieDetail() {\r\n\t//History\r\n\tconst history = useHistory();\r\n\t\r\n\t//Params\r\n\tconst params = useParams();\r\n\tparams.id === ':id' && history.push('/oportunidades')\r\n\t\r\n\t//Alert\r\n\tconst alert = useAlert();\r\n\r\n\tconst showSuccess = (m) => {\r\n\t\talert.show(m, {type: 'success'})\r\n\t}\r\n\r\n\t//States\r\n\tconst [opportunity, setOpportunity] = useState([]);\r\n\tconst [ifIsCandidate, setIfIsCandidate] = useState(false)\r\n\r\n\t//Context\r\n\tuseEffect(() => {\r\n\t\tconst fetchOpportunity = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await getOpportunitieDetail(params.id);\r\n\t\t\t\t\r\n\t\t\t\t//redireciona em caso de tentativa de manipulação da url\r\n\t\t\t\tresponse === null && history.push('/oportunidades'); \r\n\t\t\t\t\r\n\t\t\t\tsetOpportunity(response.data.responseData);\r\n\r\n\t\t\t\t//Busca os dados para checar se existe candidatura para esta vaga\r\n\t\t\t\tconst checkIfIsCandidate = await checkIsCandidate();\r\n\r\n\t\t\t\tconst opportunities = checkIfIsCandidate.opps.find(\r\n\t\t\t\t\topp => opp == params.id)\r\n\t\t\t\t\r\n\t\t\t\topportunities != undefined && setIfIsCandidate(checkIfIsCandidate.status);\r\n\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//Checar se o usuário tem a candidatura\r\n\t\tfetchOpportunity();\r\n\t\t//setCheckCandidate();\r\n\t}, []);\r\n\r\n\tfunction createNewCandidature() {\r\n\t\t//Criar candidatura na base\r\n\t\t//setCheckCandidate(true);\r\n\t\tif (ifIsCandidate === false) {\r\n\t\t\tcreateCandidature(params.id);\r\n\t\t\tshowSuccess('Candidatura criada com sucesso! Prossiga para a próxima etapa');\r\n\t\t\tsetIfIsCandidate(true)\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\r\n\t\t<div id=\"page-opportunitie-details\" className=\"page-position\">\r\n\t\t\t<BackgroundTitle title={opportunity.titulo} description=\"\" />\r\n\r\n\t\t\t<div className=\"opportunitie-detail-description\">\r\n\t\t\t\t{\r\n\t\t\t\t\t//<strong>Número de vagas:</strong>\r\n\t\t\t\t\t//<p id=\"opportunitie-name\">199</p>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<OpportunitiesDetailCard\r\n\t\t\t\t\tjobDescription={opportunity.descricaoVaga}\r\n\t\t\t\t\tjobType={\"Não informado\"}\r\n\t\t\t\t\tworkTime={opportunity.horarioTrabalho}\r\n\t\t\t\t\thabilities={opportunity.requisitoDesejavel}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{!ifIsCandidate &&\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => createNewCandidature()}\r\n\t\t\t\t\tclassName=\"button button-secondary opportunitie-button\"\r\n\t\t\t\t>\r\n\t\t\t\t\tQuero me candidatar\r\n\t\t\t\t</button>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\r\n\t\t\t{\r\n\t\t\tifIsCandidate && \r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div id=\"record-videos\">\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t{`Olá, ${getUserName()}. Você está se candidatando a\r\n\t\t\t\t\t\t\tvaga de ${opportunity.titulo}. Já temos seu CV, agora precisamos que você responda as perguntas abaixo. Por favor, responda as questões abaixo em vídeo:`}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\r\n\t\t\t\t\t\t<p></p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div id=\"video-questions\">\r\n\t\t\t\t\t\t<div className=\"questions\">\r\n\t\t\t\t\t\t\t<div className=\"question\">\r\n\t\t\t\t\t\t\t\tFale um pouco sobre você{\" \"}\r\n\t\t\t\t\t\t\t\t<FaCheck className=\"question-check\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t\t\t\t<div className=\"actions\">\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"send-video\" className=\"send-button\">\r\n\t\t\t\t\t\t\t\t\t<FaUpload className=\"send-button-icon\" />\r\n\t\t\t\t\t\t\t\t\tEnviar Vídeo\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tid=\"send-video\"\r\n\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"send-button\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ display: \"none\" }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t<Link to={`/gravar-video/${params.id}`} className=\"send-button\">\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t//Retornar para video/:id\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t<FaRecordVinyl className=\"send-button-icon\" />\r\n\t\t\t\t\t\t\t\t\tGravar vídeo\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t<button className=\"send-button\">\r\n\t\t\t\t\t\t\t\t\t<FaDownload className=\"send-button-icon\" />\r\n\t\t\t\t\t\t\t\t\tDownload\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t<div id=\"message\">\r\n\t\t\t\t\t\t<p>Parabéns! Você está concorrendo a esta vaga!</p>\r\n\t\t\t\t\t</div>\r\n\t\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t<div className=\"return\">\r\n\t\t\t\t<Link to=\"/oportunidades/\" className=\"button button-secondary\">\r\n\t\t\t\t\tVer oportunidades\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default OpportunitieDetail;\r\n","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\pages\\opportunities.js",["139","140","141"],"import React, { useState, useEffect } from \"react\";\r\n\r\n//Components\r\nimport BackgroundTitle from \"../components/background-title/Background-title\";\r\nimport OpportunitiesList from \"../components/opportunities/OpportunitiesList\";\r\n//import Pagination from \"../components/Pagination\";\r\n\r\n//CSS\r\nimport \"../styles/opportunities.css\";\r\n\r\n//Methods\r\nimport {getOpportunities} from '../services/methods'\r\n\r\nfunction Opportunities() {\r\n\tconst [error, setError] = useState(null);\r\n\tconst [opportunities, setOpportunities] = useState([]);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [currentPage, setCurrentPage] = useState(1);\r\n\tconst [postsPerPage, setPostsPerPage] = useState(5);\r\n\tconst [search, setSearch] = useState('')\r\n\r\n\tasync function fetchOpportunities(searchText) {\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tlet response = '';\r\n\t\t\tresponse = await getOpportunities(1,searchText) //await api.get(\"/oportunidade/1/10\");\r\n\t\t\tsetOpportunities(response.data.responseData);\r\n\t\t\tsetLoading(false);\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsetError(e);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchOpportunities('');\r\n\t},[]);\r\n\r\n\tconst indexOfLastPost = currentPage * postsPerPage;\r\n\tconst indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n\t//const currentPosts = opportunities.slice(indexOfFirstPost, indexOfLastPost);\r\n\t//Muda pagina\r\n\tconst paginate = (pageNumber) => {\r\n\t\tsetCurrentPage(pageNumber);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id=\"page-opportunities\" className=\"page-position\">\r\n\r\n\t\t\t<BackgroundTitle\r\n\t\t\t\ttitle={\"Junte-se a nós!\"}\r\n\t\t\t\tdescription={\r\n\t\t\t\t\t\"A história da Sys Manager é construída com a contribuição de uma equipe talentosa empenhada em sempre entregar a melhor solução para os clientes.\"\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\r\n\t\t\t{\r\n\t\t\t\r\n\t\t\terror === null ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div id='search'>\r\n\t\t\t\t\t<div id='search-items'>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid='search-input'\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tvalue={search}\r\n\t\t\t\t\t\t\tplaceholder='SCRUM Master...'\r\n\t\t\t\t\t\t\tonChange={(e) => setSearch(e.target.value)}/>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\t\tid='clean-field'\r\n\t\t\t\t\t\t\t\tclassName='button button-secondary'\r\n\t\t\t\t\t\t\t\tonClick={() => {fetchOpportunities(''); setSearch('')}}>\r\n\t\t\t\t\t\t\t\tLimpar</button>\r\n\r\n\t\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\t\tid='search-button'\r\n\t\t\t\t\t\t\t\tclassName='button button-primary'\r\n\t\t\t\t\t\t\t\tonClick={() => fetchOpportunities(search)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tBuscar vagas</button>\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<OpportunitiesList\r\n\t\t\t\t\t\topportunities={opportunities}\r\n\t\t\t\t\t\tloading={loading}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/*<Pagination\r\n\t\t\t\t\t\tpostsPerPage={postsPerPage}\r\n\t\t\t\t\t\ttotalPosts={opportunities.length}\r\n\t\t\t\t\t\tpaginate={paginate}\r\n\t\t\t\t\t/>*/}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div>Erro ao buscar dados...</div>\r\n\t\t\t)}\r\n\t\t\t{/*<\r\n\t\t\tList\r\n\t\t\t\topportunities={opportunities}\r\n\t\t\t\tloading={loading}\r\n\t\t\t/>\r\n\t\t\t<Pagination\r\n\t\t\t\tpostsPerPage={postsPerPage}\r\n\t\t\t\ttotalPosts={posts.length}\r\n\t\t\t\tpaginate={paginate}\r\n\t\t\t/>}\r\n\t\t\t{/*<OpportunitiesCard\r\n\t\t\t\tjobType=\"Estagiario\"\r\n\t\t\t\tjobDescription=\"Descrição teste\"\r\n\t\t\t\tworkTime=\"Das 8 as 20\"\r\n\t\t\t\thabilities=\"Ser top que nem o Lenon no React\"\r\n\t\t\t/>*/}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Opportunities;\r\n","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\pages\\page-not-found.js",[],"C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\pages\\video-recorder.js",["142"],"import React from \"react\";\r\n\r\n//React Camera\r\nimport VideoRecorderBlock from \"../components/video-recorder-block/Video-recorder-block\";\r\n\r\n//Router dom\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n//CSS\r\nimport \"../styles/video-recorder.css\";\r\n\r\n//Components\r\nimport BackgroundTitle from \"../components/background-title/Background-title\";\r\n\r\nfunction VideoRecord() {\r\n\tconst params = useParams();\r\n\r\n\tString.prototype.toMMSS = function () {\r\n\t\tvar sec_num = parseInt(this, 10);\r\n\t\tvar minutes = Math.floor(sec_num / 60);\r\n\t\tvar seconds = sec_num - minutes * 60;\r\n\t\tif (minutes < 10) {\r\n\t\t\tminutes = \"0\" + minutes;\r\n\t\t}\r\n\t\tif (seconds < 10) {\r\n\t\t\tseconds = \"0\" + seconds;\r\n\t\t}\r\n\t\treturn minutes + \":\" + seconds;\r\n\t};\r\n\r\n\tif (params.id === \"video-curriculo\") {\r\n\t\t//If this screens will be used to record video resume\r\n\t\tconst timeSeconds = \"300\"; //Tempo de gravação para vídeo currículo\r\n\r\n\t\treturn (\r\n\t\t\t<div id=\"page-video-recorder\" className=\"page-position\">\r\n\t\t\t\t<BackgroundTitle\r\n\t\t\t\t\ttitle=\"Gravar vídeo currículo\"\r\n\t\t\t\t\tdescription={`Você terá ${timeSeconds.toMMSS()} minutos para gravar seu novo vídeo currículo`}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div id=\"div-recoder\">\r\n\t\t\t\t\t<VideoRecorderBlock \r\n\t\t\t\t\t\ttime={timeSeconds} \r\n\t\t\t\t\t\treturnTo={'/oportunidades'}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\t//If will be used to record video answers\r\n\t\t//api.get('') Pegar dados da api\r\n\r\n\t\tconst timeSeconds = \"90\";\r\n\r\n\t\treturn (\r\n\t\t\t<div id=\"page-video-recorder\" className=\"page-position\">\r\n\t\t\t\t<BackgroundTitle\r\n\t\t\t\t\ttitle=\"Gravar vídeo\"\r\n\t\t\t\t\tdescription={`Você terá até ${timeSeconds.toMMSS()} para responder esta pergunta`}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div id=\"div-recoder\">\r\n\t\t\t\t\t<VideoRecorderBlock \r\n\t\t\t\t\t\ttime={timeSeconds}\r\n\t\t\t\t\t\treturnTo={''} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default VideoRecord;\r\n","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\pages\\video-resume.js",["143","144"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//Youtube dependencie\r\nimport Youtube from \"react-youtube\";\r\n\r\n//CSS\r\nimport \"../styles/video-resume.css\";\r\n\r\n//Icons\r\nimport { FaExclamation } from \"react-icons/fa\";\r\n\r\n//Components\r\nimport BackgroundTitle from \"../components/background-title/Background-title\";\r\n\r\n//Methods\r\nimport {sendVideoResume} from '../services/methods'\r\nimport { useAlert } from \"react-alert\";\r\n\r\n//Auth\r\nimport {getHashId} from '../services/auth'\r\n\r\nfunction VideoResume() {\r\n    //Alert\r\n    const alert = useAlert();\r\n\r\n    function showSuccess(m) {\r\n        alert.show(m, {type:'success'})\r\n    }\r\n\r\n    function showErrorMessage(m) {\r\n        alert.show(m, {type: 'error'})\r\n    }\r\n\r\n    const [error, setError] = useState('');\r\n    const [showError, setShowError] = useState('hide-error')\r\n    const [resumeFile, setResumeFile] = useState('')\r\n\r\n    const checkFileType = (fileType) => {\r\n        const acceptedTypes = [\r\n            //Checar tipos de arquivo aceitos\r\n            {name:'video/mp4', type:' .mp4'},\r\n            {name:'video/webm', type:' .webm'}\r\n        ]\r\n        \r\n        const isValid = acceptedTypes.find(type => type.name == fileType);\r\n\r\n        if(isValid !== undefined) {\r\n            return true;\r\n        }\r\n\r\n        else {\r\n            //Mostra os formatos em mensagem na tela\r\n            const formats = acceptedTypes.map(format => {\r\n                return (format.type);\r\n            })\r\n\r\n            setError(`Os formatos aceitos são ${formats}`)\r\n            return false;\r\n        }\r\n    }\r\n  \r\n    const history = useHistory();\r\n\r\n    async function submitResume() {\r\n        const response = await sendVideoResume(resumeFile);\r\n        if(response.status == 'error'){\r\n            showErrorMessage(response.message)\r\n            return\r\n        }\r\n        \r\n        showSuccess('Video enviado com sucesso!')\r\n        history.push(`/candidato/${getHashId()}`);\r\n    }\r\n\r\n    const handleVideoResume = (event) => {\r\n        const fileTypeName = event.target.files[0].type;\r\n        const isFormat = checkFileType(fileTypeName);\r\n                \r\n        if(isFormat) {\r\n            setShowError('hide-error');\r\n            setResumeFile(event.target.files[0]);\r\n        }\r\n        else {\r\n            setShowError('error-div');\r\n            setResumeFile('')\r\n        }\r\n    }   \r\n\r\n    return (\r\n        <div id=\"page-video-resume\" className=\"page-position\">\r\n            <BackgroundTitle \r\n                title={'Envie seu vídeo currículo'}\r\n                description={' história da Sys Manager é construída com a contribuição de uma equipe talentosa empenhada em sempre entregar a melhor solução para os clientes.'}/>\r\n            \r\n            <div className=\"page-video-content\">\r\n                <div className=\"video-marketing\">\r\n                    <Youtube \r\n                        videoId={'4WA8V2FEgDA'}\r\n                        width={'100%'}\r\n                        className=\"video-view\"/>             \r\n                </div>\r\n\r\n                <div className=\"video-description\">\r\n                    <h1>\r\n                        Vídeo currículo\r\n                    </h1>\r\n\r\n                    <p>\r\n                        Você já ouviu falar no vídeo currículo?  A Sys Manager está recrutando profissionais desta forma. Veja como você pode enviar o seu!\r\n                    </p>\r\n\r\n                    <p>\r\n                        Você pode utilizar a câmera traseira do seu celular na horizontal ou webcam clicando na opção abaixo. Escreva um roteiro com informações pessoais e experiências profissionais detalhando brevemente atividades e conhecimentos. Fale de sua formação acadêmica, certificações e quais idiomas domina.\r\n                    </p>\r\n\r\n                    <p>\r\n                        Dois a três minutos de vídeo estará ótimo! Você pode gravar, verificar como ficou e ao final encaminhar para gente!\r\n                    </p>\r\n\r\n                    <p>\r\n                        O recrutador quer te conhecer melhor. Vamos lá?\r\n                    </p>\r\n\r\n                    <div className=\"video-buttons\">\r\n                        <label htmlFor=\"video-resume\" className=\"button button-secondary\">\r\n                            Selecionar vídeo\r\n                        </label>\r\n\r\n                        <input\r\n                            id=\"video-resume\" \r\n                            type=\"file\" \r\n                            style={{display: \"none\", cursor: \"pointer\"}}\r\n                            onChange={handleVideoResume}\r\n                            />\r\n                        \r\n                        <Link to={'/gravar-video/video-curriculo'} className=\"button button-primary\">\r\n                            Gravar Vídeo\r\n                        </Link>\r\n\r\n                        {resumeFile &&\r\n                            <button\r\n                            onClick={() => submitResume()} \r\n                            className='button button-secondary send-button'>Enviar</button>\r\n                        }\r\n                    </div>\r\n                    \r\n                    {resumeFile && \r\n                        <div id=\"selected-file\">\r\n                            <span \r\n                                style={{color: 'rgba(0,0,0,0.5'}}>\r\n                                Arquivo selecionado:</span>\r\n                            <p \r\n                                style={{alignSelf:'left'}}>\r\n                                {resumeFile.name}</p>\r\n                        </div>\r\n                    }\r\n\r\n                    <div className={showError}>\r\n                        <FaExclamation/>{error}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default VideoResume;\r\n","C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\routes.js",[],"C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\services\\api.js",[],"C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\services\\auth.js",[],"C:\\Users\\lenon\\Downloads\\Projects\\motus\\motus-web\\src\\services\\methods.js",[],{"ruleId":"145","severity":1,"message":"146","line":56,"column":62,"nodeType":"147","messageId":"148","endLine":56,"endColumn":64},{"ruleId":"149","severity":1,"message":"150","line":91,"column":11,"nodeType":"151","messageId":"152","endLine":91,"endColumn":30},{"ruleId":"153","severity":1,"message":"154","line":16,"column":37,"nodeType":"155","endLine":16,"endColumn":39,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":48,"column":9,"nodeType":"159","messageId":"160","endLine":48,"endColumn":22,"fix":"161"},{"ruleId":"145","severity":1,"message":"146","line":177,"column":32,"nodeType":"147","messageId":"148","endLine":177,"endColumn":34},{"ruleId":"162","severity":1,"message":"163","line":230,"column":20,"nodeType":"164","messageId":"165","endLine":230,"endColumn":22},{"ruleId":"145","severity":1,"message":"146","line":231,"column":17,"nodeType":"147","messageId":"148","endLine":231,"endColumn":19},{"ruleId":"162","severity":1,"message":"163","line":237,"column":20,"nodeType":"164","messageId":"165","endLine":237,"endColumn":22},{"ruleId":"145","severity":1,"message":"146","line":238,"column":17,"nodeType":"147","messageId":"148","endLine":238,"endColumn":19},{"ruleId":"153","severity":1,"message":"166","line":79,"column":8,"nodeType":"155","endLine":79,"endColumn":19,"suggestions":"167"},{"ruleId":"145","severity":1,"message":"146","line":54,"column":62,"nodeType":"147","messageId":"148","endLine":54,"endColumn":64},{"ruleId":"149","severity":1,"message":"168","line":1,"column":27,"nodeType":"151","messageId":"152","endLine":1,"endColumn":37},{"ruleId":"169","severity":1,"message":"170","line":66,"column":5,"nodeType":"171","messageId":"172","endLine":66,"endColumn":60},{"ruleId":"145","severity":1,"message":"146","line":59,"column":17,"nodeType":"147","messageId":"148","endLine":59,"endColumn":19},{"ruleId":"145","severity":1,"message":"173","line":61,"column":19,"nodeType":"147","messageId":"148","endLine":61,"endColumn":21},{"ruleId":"153","severity":1,"message":"174","line":71,"column":5,"nodeType":"155","endLine":71,"endColumn":7,"suggestions":"175"},{"ruleId":"149","severity":1,"message":"176","line":19,"column":23,"nodeType":"151","messageId":"152","endLine":19,"endColumn":38},{"ruleId":"149","severity":1,"message":"177","line":40,"column":8,"nodeType":"151","messageId":"152","endLine":40,"endColumn":24},{"ruleId":"149","severity":1,"message":"178","line":43,"column":8,"nodeType":"151","messageId":"152","endLine":43,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":18,"column":2,"nodeType":"181","messageId":"148","endLine":29,"endColumn":3},{"ruleId":"145","severity":1,"message":"146","line":46,"column":62,"nodeType":"147","messageId":"148","endLine":46,"endColumn":64},{"ruleId":"145","severity":1,"message":"146","line":67,"column":28,"nodeType":"147","messageId":"148","endLine":67,"endColumn":30},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'downloadLocalResume' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setRecord'. Either include it or remove the dependency array.","ArrayExpression",["182"],"strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"183","text":"184"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'showError'. Either include it or remove the dependency array.",["185"],"'useContext' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'history' and 'params.id'. Either include them or remove the dependency array.",["186"],"'setPostsPerPage' is assigned a value but never used.","'indexOfFirstPost' is assigned a value but never used.","'paginate' is assigned a value but never used.","no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression",{"desc":"187","fix":"188"},[1110,1123],"",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [setRecord]",{"range":"193","text":"194"},"Update the dependencies array to be: [params.id, showError]",{"range":"195","text":"196"},"Update the dependencies array to be: [history, params.id]",{"range":"197","text":"198"},[409,411],"[setRecord]",[2586,2597],"[params.id, showError]",[1935,1937],"[history, params.id]"]